const express = require("express")
const router = express.Router()
const Soundcloud = require('soundcloud.ts').default;
const path = require('path');
const pool = require(path.join(__dirname, '../../db'));

const soundcloud = new Soundcloud(process.env.SOUNDCLOUD_CLIENT_ID, process.env.SOUNDCLOUD_OAUTH_TOKEN);

async function fetchUserID(url, supaUser){
    try {
        const user = await soundcloud.users.get(url);
        const dbID = user.id;
        const client = await pool.query(
            `
            UPDATE users
            SET soundcloud_id = $1
            WHERE id = $2;
        `, [dbID, supaUser]
        );
        
        return user.id;
    } catch (err) {
        console.error('Error fetching user:', err);
        return null;
    }   
}

async function fetchScUser(scID) {
    try {
        const response = await soundcloud.users.get(scID);
        const scUsername = response.username;
        return scUsername;

    } catch (err) {
        console.error('Error fetching user:', err);
        return null;
    }
    
}

async function fetchScID(email) {
    try {
        const result = await pool.query(
            `
            SELECT soundcloud_id
            FROM users
            WHERE email = $1
        `, [email]
        );
        
        return result.rows[0]?.soundcloud_id || null;

    } catch (err) {
        console.error('Error fetching user:', err);
        return null;
    }
    
}

router.get('/', async (req, res) => {
    try {
        const email = req.query.email;
        const scID = await fetchScID(email);

        if (!scID) {
            return res.status(404).json({ error: 'SoundCloud ID not in database' });
        }

        const scUser = await fetchScUser(scID);

        if (!scUser) {
            return res.status(500).json({ error: 'Failed to fetch SoundCloud username' });
        }

        res.status(200).json({ username: scUser });
    } catch (err) {
        console.error('Error in route:', err);
        res.status(500).json({ error: 'Internal Server Error' });
    }
})

router.post('/id', async (req, res) => {
    try {
        const { url, supaUser } = req.body;
        const fetchedUser = await fetchUserID(url, supaUser);

        if (fetchedUser) {
            res.status(200).json({ message: 'SoundCloud ID updated successfully', soundcloud_id: fetchedUser });
          } else {
            res.status(500).json({ error: 'Failed to fetch SoundCloud user' });
          }
    } catch (err) {
        res.status(500).json({error: err})
    }
})

module.exports = router;